package de.hdm_stuttgart.huber.itprojekt.shared.domainobjects;

import java.sql.Date;

/**
 * @author elcpt
 */
public class Notebook extends DomainObject implements Shareable, DateFilterable {

    /**
     * #AUTOGENERATED
     */
    private static final long serialVersionUID = 1L;

    private String title = null;
    private String subtitle = null;
    private UserInfo owner = null;
    private Date creationDate = null;
    private Date modificationDate = null;

    private Permission runTimePermission;

    public Notebook() {
    }

    public Notebook(int id, String title, String subtitle, UserInfo owner, Date creationDate, Date modificationDate) {

        this.id = id;
        this.title = title;
        this.subtitle = subtitle;
        this.owner = owner;
        this.creationDate = creationDate;
        this.modificationDate = modificationDate;
    }

    // REINE TESTMETHODE!!!
    public Notebook(int id) {
        this.id = id;
    }

    public boolean hasRuntimePermission() {
        return this.runTimePermission != null;
    }

    @Override
    public String toString() {
        return "NoteBook{" + "Titel='" + title + '\'' + ", Untertitel='" + subtitle + '\'' + ", Autor=" + owner
                + ", Erstellt am:" + creationDate + ", Zuletzt modifiziert am:" + modificationDate + '}';
    }

    public int getId() {
        return this.id;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getSubtitle() {
        return subtitle;
    }

    public void setSubtitle(String subtitle) {
        this.subtitle = subtitle;
    }

    public UserInfo getOwner() {
        return owner;
    }

    public void setOwner(UserInfo owner) {
        this.owner = owner;
    }

    public Date getCreationDate() {
        return creationDate;
    }

    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    public Date getModificationDate() {
        return modificationDate;
    }

    public void setModificationDate(Date modificationDate) {
        this.modificationDate = modificationDate;
    }

    public Permission getRuntimePermission() {
        return runTimePermission;
    }

    public void setRunTimePermission(Permission runTimePermission) {
        this.runTimePermission = runTimePermission;
    }

    @Override
    public char getType() {
        return 'b';
    }

    @Override
    public Date getDate(DateType type) {

        switch (type) {
            case CREATION_DATE:
                return this.creationDate;
            case MODIFICATION_DATE:
                return this.modificationDate;
            default:
                throw new IllegalArgumentException();
        }

    }

}
