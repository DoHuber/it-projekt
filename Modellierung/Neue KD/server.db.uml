<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:PapyrusJava="http://www.eclipse.org/papyrus/PapyrusJava/1" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:standard="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_2_vKkOCGEeakJtU5f6kHGA" name="RootElement">
    <packagedElement xmi:type="uml:Package" xmi:id="_P2oLoOCHEeakJtU5f6kHGA" name="IT-Projekt">
      <packagedElement xmi:type="uml:Package" xmi:id="_P3tJsOCHEeakJtU5f6kHGA" name="de">
        <packagedElement xmi:type="uml:Package" xmi:id="_P3twwOCHEeakJtU5f6kHGA" name="hdm_stuttgart">
          <packagedElement xmi:type="uml:Package" xmi:id="_P3twweCHEeakJtU5f6kHGA" name="huber">
            <packagedElement xmi:type="uml:Package" xmi:id="_P3uX0OCHEeakJtU5f6kHGA" name="itprojekt">
              <packagedElement xmi:type="uml:Package" xmi:id="_P3uX0eCHEeakJtU5f6kHGA" name="server">
                <packagedElement xmi:type="uml:Package" xmi:id="_P3u-4OCHEeakJtU5f6kHGA" name="db">
                  <packagedElement xmi:type="uml:Class" xmi:id="_P3zQUOCHEeakJtU5f6kHGA" name="NoteBookMapper" visibility="public">
                    <generalization xmi:type="uml:Generalization" xmi:id="_P30ecOCHEeakJtU5f6kHGA" general="_P3z3YOCHEeakJtU5f6kHGA"/>
                    <generalization xmi:type="uml:Generalization" xmi:id="_5JKfwOCHEeakJtU5f6kHGA" general="_P3z3YOCHEeakJtU5f6kHGA"/>
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P326sOCHEeakJtU5f6kHGA" name="noteBookMapper" visibility="private" isStatic="true" type="_P3zQUOCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_P34I0OCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>null</body>
                      </defaultValue>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P4Wp8OCHEeakJtU5f6kHGA" name="NoteBookMapper" specification="_P39BUOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    super();&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P4aUUOCHEeakJtU5f6kHGA" name="getNoteBookMapper" specification="_P4X4EOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    if (noteBookMapper == null) {&#xD;
        try {&#xD;
            noteBookMapper = new NoteBookMapper();&#xD;
        } catch (ClassNotFoundExceptionSQLException |  e) {&#xD;
            e.printStackTrace();&#xD;
        }&#xD;
    }&#xD;
    return noteBookMapper;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P4i3MOCHEeakJtU5f6kHGA" name="create" specification="_P4ga8eCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement stmt = connection.prepareStatement(&quot;INSERT INTO notizbuch.notebook(title, subtitle, creation_date, modification_date, author_id) &quot; + &quot;VALUES (?,?,?,?,?)&quot;, Statement.RETURN_GENERATED_KEYS);&#xD;
        stmt.setString(1, notebook.getTitle());&#xD;
        stmt.setString(2, notebook.getSubtitle());&#xD;
        stmt.setDate(3, notebook.getCreationDate());&#xD;
        stmt.setDate(4, notebook.getModificationDate());&#xD;
        stmt.setInt(5, notebook.getOwner().getId());&#xD;
        stmt.executeUpdate();&#xD;
        ResultSet rs = stmt.getGeneratedKeys();&#xD;
        if (rs.next()) {&#xD;
            return findById(rs.getLong(1));&#xD;
        }&#xD;
    } catch (SQLExceptionClassNotFoundException |  sqlExp) {&#xD;
        sqlExp.printStackTrace();&#xD;
    }&#xD;
    return notebook;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P43nUOCHEeakJtU5f6kHGA" name="findById" specification="_P41yIOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Connection connection = DBConnection.getConnection();&#xD;
    try {&#xD;
        PreparedStatement stmt = connection.prepareStatement(&quot;SELECT * FROM notizbuch.notebook WHERE id = ?&quot;);&#xD;
        stmt.setLong(1, id);&#xD;
        ResultSet rs = stmt.executeQuery();&#xD;
        if (rs.next()) {&#xD;
            return new NoteBook(rs.getInt(&quot;id&quot;), rs.getString(&quot;title&quot;), rs.getString(&quot;subtitle&quot;), UserInfoMapper.getUserInfoMapper().findById(rs.getInt(&quot;author_id&quot;)), rs.getDate(&quot;creation_date&quot;), rs.getDate(&quot;modification_date&quot;));&#xD;
        }&#xD;
    } catch (SQLException sqlExp) {&#xD;
        sqlExp.printStackTrace();&#xD;
        return null;&#xD;
    }&#xD;
    return null;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P46qoOCHEeakJtU5f6kHGA" name="save" specification="_P441cOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Connection con = DBConnection.getConnection();&#xD;
    try {&#xD;
        PreparedStatement stmt = con.prepareStatement(&quot;UPDATE notizbuch.notebook SET title=?, subtitle=?, creation_date=?, modification_date=?, author_id=? WHERE id = ?&quot;);&#xD;
        stmt.setString(1, notebook.getTitle());&#xD;
        stmt.setString(2, notebook.getSubtitle());&#xD;
        stmt.setDate(3, notebook.getCreationDate());&#xD;
        stmt.setDate(4, new Date(System.currentTimeMillis()));&#xD;
        stmt.setInt(5, notebook.getOwner().getId());&#xD;
        stmt.setInt(6, notebook.getId());&#xD;
        stmt.executeUpdate();&#xD;
    } catch (SQLException sqlExp) {&#xD;
        sqlExp.printStackTrace();&#xD;
        throw new IllegalArgumentException();&#xD;
    }&#xD;
    return findById(notebook.getId());&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P48f0OCHEeakJtU5f6kHGA" name="delete" specification="_P47RsOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement stmt = connection.prepareStatement(&quot;DELETE FROM notizbuch.notebook WHERE id = ?&quot;);&#xD;
        stmt.setInt(1, notebook.getId());&#xD;
        stmt.executeUpdate();&#xD;
    } catch (SQLException e) {&#xD;
        e.printStackTrace();&#xD;
        throw new IllegalArgumentException(e);&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P5AxQOCHEeakJtU5f6kHGA" name="getAllNoteBooks" specification="_P48f0eCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        Statement stmt = connection.createStatement();&#xD;
        ResultSet rs = stmt.executeQuery(&quot;SELECT * FROM notizbuch.notebook&quot;);&#xD;
        return makeNoteBooksFromResultSet(rs);&#xD;
    } catch (SQLExceptionClassNotFoundException |  e) {&#xD;
        e.printStackTrace();&#xD;
        return null;&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P5CmcOCHEeakJtU5f6kHGA" name="getAllNoteBooksForUserId" specification="_P5BYUOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareStatement(&quot;SELECT * FROM notizbuch.notebook WHERE author_id = ?&quot;);&#xD;
        ps.setInt(1, userId);&#xD;
        ResultSet rs = ps.executeQuery();&#xD;
        return makeNoteBooksFromResultSet(rs);&#xD;
    } catch (SQLExceptionClassNotFoundException |  e) {&#xD;
        e.printStackTrace();&#xD;
        return null;&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P5He8OCHEeakJtU5f6kHGA" name="getAllNoteBooksSharedWith" specification="_P5GQ0OCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        String sql = &quot;SELECT notebook.id AS id, title, subtitle, creation_date, modification_date, notebook.author_id AS author_id FROM notebook &quot; + &quot;JOIN permission ON notebook.id = permission.notebook_id WHERE beneficiary_id = ?&quot;;&#xD;
        PreparedStatement ps = connection.prepareStatement(sql);&#xD;
        ps.setInt(1, u.getId());&#xD;
        ResultSet rs = ps.executeQuery();&#xD;
        return makeNoteBooksFromResultSet(rs);&#xD;
    } catch (Exception e) {&#xD;
        e.printStackTrace();&#xD;
        return new Vector&lt;>();&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P5SeEOCHEeakJtU5f6kHGA" name="makeNoteBooksFromResultSet" specification="_P5Qo4OCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Vector&lt;NoteBook> v = new Vector&lt;>();&#xD;
    while (rs.next()) {&#xD;
        NoteBook resultRow = new NoteBook(rs.getInt(&quot;id&quot;));&#xD;
        resultRow.setTitle(rs.getString(&quot;title&quot;));&#xD;
        resultRow.setSubtitle(rs.getString(&quot;subtitle&quot;));&#xD;
        resultRow.setCreationDate(rs.getDate(&quot;creation_date&quot;));&#xD;
        resultRow.setModificationDate(rs.getDate(&quot;modification_date&quot;));&#xD;
        resultRow.setOwner(UserInfoMapper.getUserInfoMapper().findById(rs.getInt(&quot;author_id&quot;)));&#xD;
        v.add(resultRow);&#xD;
    }&#xD;
    return v;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P5UTQOCHEeakJtU5f6kHGA" name="getAllNoteBooksSharedBy" specification="_P5SeEeCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    String sql = &quot;SELECT DISTINCT notebook.id AS id FROM notebook JOIN permission ON notebook.id = permission.notebook_id WHERE notebook.author_id = ?&quot;;&#xD;
    Vector&lt;NoteBook> v = new Vector&lt;>();&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareStatement(sql);&#xD;
        ps.setInt(1, u.getId());&#xD;
        ResultSet rs = ps.executeQuery();&#xD;
        while (rs.next()) {&#xD;
            v.add(findById(rs.getInt(&quot;id&quot;)));&#xD;
        }&#xD;
        return v;&#xD;
    } catch (Exception e) {&#xD;
        e.printStackTrace();&#xD;
        return v;&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P39BUOCHEeakJtU5f6kHGA" name="NoteBookMapper" visibility="protected" method="_P4Wp8OCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P4SYgOCHEeakJtU5f6kHGA"/>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P4X4EOCHEeakJtU5f6kHGA" name="getNoteBookMapper" visibility="public" isStatic="true" method="_P4aUUOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P4ZGMOCHEeakJtU5f6kHGA" type="_P3zQUOCHEeakJtU5f6kHGA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P4ga8eCHEeakJtU5f6kHGA" name="create" visibility="public" method="_P4i3MOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P4hCAOCHEeakJtU5f6kHGA" type="_P4cwkuCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P4iQIOCHEeakJtU5f6kHGA" name="notebook" type="_P4cwkuCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P41yIOCHEeakJtU5f6kHGA" name="findById" visibility="public" method="_P43nUOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P4SYgOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P42ZMOCHEeakJtU5f6kHGA" type="_P4cwkuCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P43AQOCHEeakJtU5f6kHGA" name="id">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_8heigBydEduyofBvg4RL2w"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P441cOCHEeakJtU5f6kHGA" name="save" visibility="public" method="_P46qoOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P4SYgOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P45cgOCHEeakJtU5f6kHGA" type="_P4cwkuCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P46DkOCHEeakJtU5f6kHGA" name="notebook" type="_P4cwkuCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P47RsOCHEeakJtU5f6kHGA" name="delete" visibility="public" method="_P48f0OCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P474wOCHEeakJtU5f6kHGA" name="notebook" type="_P4cwkuCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P48f0eCHEeakJtU5f6kHGA" name="getAllNoteBooks" visibility="public" method="_P5AxQOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P5AKMeCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P5BYUOCHEeakJtU5f6kHGA" name="getAllNoteBooksForUserId" visibility="public" method="_P5CmcOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P5BYUeCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P5B_YOCHEeakJtU5f6kHGA" name="userId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P5GQ0OCHEeakJtU5f6kHGA" name="getAllNoteBooksSharedWith" visibility="public" method="_P5He8OCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P5GQ0eCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P5G34OCHEeakJtU5f6kHGA" name="u" type="_P5CmceCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P5Qo4OCHEeakJtU5f6kHGA" name="makeNoteBooksFromResultSet" visibility="private" method="_P5SeEOCHEeakJtU5f6kHGA" raisedException="_P4SYgOCHEeakJtU5f6kHGA _P4LDwOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P5RP8OCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P5R3AOCHEeakJtU5f6kHGA" name="rs" type="_P5He8eCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P5SeEeCHEeakJtU5f6kHGA" name="getAllNoteBooksSharedBy" visibility="public" method="_P5UTQOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P5TFIOCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P5TsMOCHEeakJtU5f6kHGA" name="u" type="_P5CmceCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_P3z3YOCHEeakJtU5f6kHGA" name="DataMapper" visibility="public" isAbstract="true">
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P9yjkOCHEeakJtU5f6kHGA" name="loadedObjects" visibility="protected" type="_P9wHUOCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_P9yjkeCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>new HashMap&lt;>()</body>
                      </defaultValue>
                    </ownedAttribute>
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P9zKoOCHEeakJtU5f6kHGA" name="connection" visibility="protected" type="_P9S0UOCHEeakJtU5f6kHGA" isUnique="false"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P96fYOCHEeakJtU5f6kHGA" name="DataMapper" specification="_P9zKoeCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    connection = DBConnection.getConnection();&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P-FegOCHEeakJtU5f6kHGA" name="isObjectLoaded" specification="_P9_-8OCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Object o = loadedObjects.get(id);&#xD;
    return o != null &amp;&amp; classToCheck.isAssignableFrom(o.getClass());&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P-Ih0OCHEeakJtU5f6kHGA" name="finalize" specification="_P-HTsOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    super.finalize();&#xD;
    connection.close();&#xD;
</body>
                    </ownedBehavior>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P9zKoeCHEeakJtU5f6kHGA" name="DataMapper" visibility="protected" method="_P96fYOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P4SYgOCHEeakJtU5f6kHGA"/>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P9_-8OCHEeakJtU5f6kHGA" name="isObjectLoaded" visibility="protected" method="_P-FegOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P-BNEOCHEeakJtU5f6kHGA" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                      </ownedParameter>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P-DCQOCHEeakJtU5f6kHGA" name="id">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_8heigBydEduyofBvg4RL2w"/>
                      </ownedParameter>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P-E3cOCHEeakJtU5f6kHGA" name="classToCheck" type="_P98UkOCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P-HTsOCHEeakJtU5f6kHGA" name="finalize" visibility="protected" method="_P-Ih0OCHEeakJtU5f6kHGA" raisedException="_P9lIMOCHEeakJtU5f6kHGA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_P4LDwOCHEeakJtU5f6kHGA" name="ClassNotFoundException"/>
                  <packagedElement xmi:type="uml:Class" xmi:id="_P5fSYOCHEeakJtU5f6kHGA" name="UserInfoMapper" visibility="public">
                    <generalization xmi:type="uml:Generalization" xmi:id="_P5f5cOCHEeakJtU5f6kHGA" general="_P3z3YOCHEeakJtU5f6kHGA"/>
                    <generalization xmi:type="uml:Generalization" xmi:id="_3TeJcOCHEeakJtU5f6kHGA" general="_P3z3YOCHEeakJtU5f6kHGA"/>
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P5f5ceCHEeakJtU5f6kHGA" name="userInfoMapper" visibility="private" isStatic="true" type="_P5fSYOCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_P5gggOCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>null</body>
                      </defaultValue>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P5q4kOCHEeakJtU5f6kHGA" name="UserInfoMapper" specification="_P5gggeCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P5yNUOCHEeakJtU5f6kHGA" name="getUserInfoMapper" specification="_P5ui8OCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    if (userInfoMapper == null) {&#xD;
        try {&#xD;
            userInfoMapper = new UserInfoMapper();&#xD;
        } catch (ClassNotFoundException e) {&#xD;
            throw new RuntimeException(e.toString());&#xD;
        } catch (SQLException e) {&#xD;
            throw new RuntimeException(e.toString());&#xD;
        }&#xD;
    }&#xD;
    return userInfoMapper;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P58lYOCHEeakJtU5f6kHGA" name="create" specification="_P50pkOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Connection con = DBConnection.getConnection();&#xD;
    try {&#xD;
        PreparedStatement stmt = con.prepareStatement(&quot;INSERT INTO userinfo(FirstName, UserName, SurName, Email, GoogleId) VALUES (?, ?, ?, ?, ?)&quot;, Statement.RETURN_GENERATED_KEYS);&#xD;
        stmt.setString(1, noteUser.getFirstName());&#xD;
        stmt.setString(2, noteUser.getNickname());&#xD;
        stmt.setString(3, noteUser.getSurName());&#xD;
        stmt.setString(4, noteUser.getEmailAddress());&#xD;
        stmt.setString(5, noteUser.getGoogleId());&#xD;
        stmt.executeUpdate();&#xD;
        ResultSet rs = stmt.getGeneratedKeys();&#xD;
        if (rs.next()) {&#xD;
            return findById(rs.getInt(1));&#xD;
        }&#xD;
    } catch (SQLException sqlExp) {&#xD;
        sqlExp.printStackTrace();&#xD;
    }&#xD;
    return noteUser;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P6LO4OCHEeakJtU5f6kHGA" name="findById" specification="_P6CE8OCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement stmt = connection.prepareStatement(&quot;SELECT * FROM notizbuch.userinfo WHERE id = ?&quot;);&#xD;
        stmt.setInt(1, id);&#xD;
        // Ergebnis holen&#xD;
        ResultSet results = stmt.executeQuery();&#xD;
        if (results.next()) {&#xD;
            UserInfo noteUser = new UserInfo(results.getInt(&quot;id&quot;), results.getString(&quot;firstname&quot;), results.getString(&quot;username&quot;), results.getString(&quot;lastname&quot;), results.getString(&quot;email&quot;), results.getString(&quot;google_id&quot;));&#xD;
            return noteUser;&#xD;
        }&#xD;
    } catch (SQLException sqlExp) {&#xD;
        sqlExp.printStackTrace();&#xD;
        return null;&#xD;
    }&#xD;
    return null;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P6ZRUOCHEeakJtU5f6kHGA" name="save" specification="_P6QHYOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        String sql = &quot;UPDATE notizbuch.userinfo SET username = ?, firstname = ?, lastname = ?, email = ? WHERE google_id = ?&quot;;&#xD;
        PreparedStatement stmt = connection.prepareStatement(sql);&#xD;
        stmt.setString(1, userToSave.getNickname());&#xD;
        stmt.setString(2, userToSave.getFirstName());&#xD;
        stmt.setString(3, userToSave.getSurName());&#xD;
        stmt.setString(4, userToSave.getEmailAddress());&#xD;
        stmt.setString(5, userToSave.getGoogleId());&#xD;
        stmt.executeUpdate();&#xD;
    } catch (SQLException sqlExp) {&#xD;
        sqlExp.printStackTrace();&#xD;
        throw new IllegalArgumentException();&#xD;
    }&#xD;
    return findById(userToSave.getId());&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P6hNIOCHEeakJtU5f6kHGA" name="delete" specification="_P6cUoOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Connection con = DBConnection.getConnection();&#xD;
    try {&#xD;
        PreparedStatement stmt = con.prepareStatement(&quot;DELETE FROM notizbuch.userinfo WHERE id = ?&quot;);&#xD;
        stmt.setLong(1, noteUser.getId());&#xD;
        stmt.executeUpdate();&#xD;
    } catch (SQLException sqlExp) {&#xD;
        sqlExp.printStackTrace();&#xD;
        throw new IllegalArgumentException();&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P6mssOCHEeakJtU5f6kHGA" name="getAllNoteUser" specification="_P6jpYOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Connection con = DBConnection.getConnection();&#xD;
    Vector&lt;UserInfo> result = new Vector&lt;>();&#xD;
    try {&#xD;
        // wieso kein prepared Statement mehr?&#xD;
        // PreparedStatement stmt = con.prepareStatement(&quot;SELECT NoteUserId&#xD;
        // FROM NoteUser&quot;);&#xD;
        Statement stmt = con.createStatement();&#xD;
        ResultSet results = stmt.executeQuery(&quot;SELECT * FROM notizbuch.userinfo&quot;);&#xD;
        while (results.next()) {&#xD;
            UserInfo noteUser = new UserInfo(results.getInt(&quot;id&quot;), results.getString(&quot;firstname&quot;), results.getString(&quot;username&quot;), results.getString(&quot;lastname&quot;), results.getString(&quot;email&quot;), results.getString(&quot;google_id&quot;));&#xD;
            result.add(noteUser);&#xD;
        }&#xD;
    } catch (SQLException e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
    return result;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P6zhAOCHEeakJtU5f6kHGA" name="isUserRegistered" specification="_P6uogOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareStatement(&quot;SELECT EXISTS(SELECT * FROM notizbuch.userinfo WHERE email = ?) AS does_exist&quot;);&#xD;
        ps.setString(1, email);&#xD;
        ResultSet rs = ps.executeQuery();&#xD;
        if (rs.next()) {&#xD;
            return rs.getBoolean(&quot;does_exist&quot;);&#xD;
        }&#xD;
    } catch (SQLException e) {&#xD;
        e.printStackTrace();&#xD;
        throw new RuntimeException(e.toString());&#xD;
    }&#xD;
    return false;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P63ycOCHEeakJtU5f6kHGA" name="registerUser" specification="_P61WMOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareStatement(&quot;INSERT INTO notizbuch.userinfo(username, email, google_id)&quot; + &quot; VALUES (?, ?, ?)&quot;);&#xD;
        ps.setString(1, u.getNickname());&#xD;
        ps.setString(2, u.getEmailAddress());&#xD;
        ps.setString(3, u.getGoogleId());&#xD;
        ps.executeUpdate();&#xD;
    } catch (SQLException e) {&#xD;
        e.printStackTrace();&#xD;
        throw new RuntimeException(e.toString());&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P6-gIOCHEeakJtU5f6kHGA" name="findUserByGoogleId" specification="_P66OsOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareCall(&quot;SELECT id FROM notizbuch.userinfo WHERE google_id = ?&quot;);&#xD;
        ps.setString(1, googleId);&#xD;
        ResultSet rs = ps.executeQuery();&#xD;
        if (rs.next()) {&#xD;
            return findById(rs.getInt(&quot;id&quot;));&#xD;
        } else {&#xD;
            throw new IllegalArgumentException(&quot;Logikfehler: Kein User gefunden&quot;);&#xD;
        }&#xD;
    } catch (SQLExceptionClassNotFoundException |  e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
    return null;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P7I4MOCHEeakJtU5f6kHGA" name="findByEmailAdress" specification="_P7CKgOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareCall(&quot;SELECT id FROM notizbuch.userinfo WHERE email = ?&quot;);&#xD;
        ps.setString(1, email);&#xD;
        ResultSet rs = ps.executeQuery();&#xD;
        if (rs.next()) {&#xD;
            return findById(rs.getInt(&quot;id&quot;));&#xD;
        } else {&#xD;
            return null;&#xD;
        }&#xD;
    } catch (SQLExceptionClassNotFoundException |  e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
    return null;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P7Pl4OCHEeakJtU5f6kHGA" name="getAllEmailAdresses" specification="_P7MikOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Vector&lt;String> v = new Vector&lt;>();&#xD;
    try {&#xD;
        Statement s = connection.createStatement();&#xD;
        ResultSet rs = s.executeQuery(&quot;SELECT email FROM notizbuch.userinfo&quot;);&#xD;
        while (rs.next()) {&#xD;
            v.add(rs.getString(&quot;email&quot;));&#xD;
        }&#xD;
        return v;&#xD;
    } catch (SQLException e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
    return v;&#xD;
</body>
                    </ownedBehavior>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P5gggeCHEeakJtU5f6kHGA" name="UserInfoMapper" visibility="protected" method="_P5q4kOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA"/>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P5ui8OCHEeakJtU5f6kHGA" name="getUserInfoMapper" visibility="public" isStatic="true" method="_P5yNUOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P5wYIOCHEeakJtU5f6kHGA" type="_P5fSYOCHEeakJtU5f6kHGA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P50pkOCHEeakJtU5f6kHGA" name="create" visibility="public" method="_P58lYOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P53F0OCHEeakJtU5f6kHGA" type="_P5CmceCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P547AOCHEeakJtU5f6kHGA" name="noteUser" type="_P5CmceCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P6CE8OCHEeakJtU5f6kHGA" name="findById" visibility="public" method="_P6LO4OCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P6EhMOCHEeakJtU5f6kHGA" type="_P5CmceCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P6GWYOCHEeakJtU5f6kHGA" name="id">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P6QHYOCHEeakJtU5f6kHGA" name="save" visibility="public" method="_P6ZRUOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P6TKsOCHEeakJtU5f6kHGA" type="_P5CmceCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P6WOAOCHEeakJtU5f6kHGA" name="userToSave" type="_P5CmceCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P6cUoOCHEeakJtU5f6kHGA" name="delete" visibility="public" method="_P6hNIOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P6eJ0OCHEeakJtU5f6kHGA" name="noteUser" type="_P5CmceCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P6jpYOCHEeakJtU5f6kHGA" name="getAllNoteUser" visibility="public" method="_P6mssOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P6k3gOCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P6uogOCHEeakJtU5f6kHGA" name="isUserRegistered" visibility="public" method="_P6zhAOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P6v2oOCHEeakJtU5f6kHGA" direction="return">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                      </ownedParameter>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P6xr0OCHEeakJtU5f6kHGA" name="email" type="_P6pI8OCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P61WMOCHEeakJtU5f6kHGA" name="registerUser" visibility="public" method="_P63ycOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P62kUOCHEeakJtU5f6kHGA" name="u" type="_P5CmceCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P66OsOCHEeakJtU5f6kHGA" name="findUserByGoogleId" visibility="public" method="_P6-gIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P67c0OCHEeakJtU5f6kHGA" type="_P5CmceCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P68q8OCHEeakJtU5f6kHGA" name="googleId" type="_P6pI8OCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P7CKgOCHEeakJtU5f6kHGA" name="findByEmailAdress" visibility="public" method="_P7I4MOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P7D_sOCHEeakJtU5f6kHGA" type="_P5CmceCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P7F04OCHEeakJtU5f6kHGA" name="email" type="_P6pI8OCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P7MikOCHEeakJtU5f6kHGA" name="getAllEmailAdresses" visibility="public" method="_P7Pl4OCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P7OXwOCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_P5mnIOCHEeakJtU5f6kHGA" name="SQLException"/>
                  <packagedElement xmi:type="uml:Class" xmi:id="_P7bMEOCHEeakJtU5f6kHGA" name="PermissionMapper" visibility="public">
                    <generalization xmi:type="uml:Generalization" xmi:id="_P7dBQOCHEeakJtU5f6kHGA" general="_P3z3YOCHEeakJtU5f6kHGA"/>
                    <generalization xmi:type="uml:Generalization" xmi:id="_16ouQOCHEeakJtU5f6kHGA" general="_P3z3YOCHEeakJtU5f6kHGA"/>
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P7ePYOCHEeakJtU5f6kHGA" name="permissionMapper" visibility="private" isStatic="true" type="_P7bMEOCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_P7groOCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>null</body>
                      </defaultValue>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P7oncOCHEeakJtU5f6kHGA" name="PermissionMapper" specification="_P7h5wOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    super();&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P7sR0OCHEeakJtU5f6kHGA" name="getPermissionMapper" specification="_P7p1kOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    if (permissionMapper == null) {&#xD;
        try {&#xD;
            permissionMapper = new PermissionMapper();&#xD;
        } catch (ClassNotFoundException e) {&#xD;
            e.printStackTrace();&#xD;
        } catch (SQLException e) {&#xD;
            e.printStackTrace();&#xD;
        }&#xD;
    }&#xD;
    return permissionMapper;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P7-lsOCHEeakJtU5f6kHGA" name="getPermissionFor" specification="_P7xxYOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    StringBuilder sql = new StringBuilder();&#xD;
    sql.append(&quot;SELECT * FROM notizbuch.permission WHERE beneficiary_id = ? AND &quot;);&#xD;
    if (sharedObject instanceof Note) {&#xD;
        sql.append(&quot;note_id = ?;&quot;);&#xD;
    } else if (sharedObject instanceof NoteBook) {&#xD;
        sql.append(&quot;notebook_id = ?;&quot;);&#xD;
    } else {&#xD;
        throw new RuntimeException(&quot;Das war der falsche Datentyp&quot;);&#xD;
    }&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareStatement(sql.toString());&#xD;
        ps.setInt(1, u.getId());&#xD;
        ps.setInt(2, sharedObject.getId());&#xD;
        ResultSet rs = ps.executeQuery();&#xD;
        // Workaround, eventuelle makeFrom-Methode refactoren?&#xD;
        Vector&lt;Permission> v = makeFromResultSet(rs);&#xD;
        if (v.size() != 0) {&#xD;
            return v.firstElement();&#xD;
        } else {&#xD;
            return null;&#xD;
        }&#xD;
    } catch (SQLExceptionClassNotFoundException |  e) {&#xD;
        e.printStackTrace();&#xD;
        return null;&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P8C3IOCHEeakJtU5f6kHGA" name="createPermission" specification="_P8Aa4OCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    String sql = &quot;INSERT INTO notizbuch.permission(author_id, permission_level, type, :targetid, beneficiary_id) VALUES (?, ?, ?, ?, ?)&quot;;&#xD;
    String replaceString;&#xD;
    switch(p.getSharedObject().getType()) {&#xD;
        case 'b':&#xD;
            replaceString = &quot;notebook_id&quot;;&#xD;
            break;&#xD;
        case 'n':&#xD;
            replaceString = &quot;note_id&quot;;&#xD;
            break;&#xD;
        default:&#xD;
            throw new RuntimeException(&quot;Invalid Type for current database configuration!&quot;);&#xD;
    }&#xD;
    sql = sql.replaceAll(&quot;:targetid&quot;, replaceString);&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareStatement(sql);&#xD;
        ps.setInt(1, p.getAuthor().getId());&#xD;
        ps.setInt(2, p.getLevelAsInt());&#xD;
        ps.setString(3, Character.toString(p.getSharedObject().getType()));&#xD;
        ps.setInt(4, p.getSharedObject().getId());&#xD;
        ps.setInt(5, p.getBeneficiary().getId());&#xD;
        ps.executeUpdate();&#xD;
    } catch (Exception e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P8LaAOCHEeakJtU5f6kHGA" name="getAllPermissionsFor" specification="_P8HvoOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Vector&lt;Permission> v = new Vector&lt;>();&#xD;
    String sql = &quot;SELECT * FROM notizbuch.permission WHERE :targetTable = ?&quot;;&#xD;
    String replaceString;&#xD;
    switch(s.getType()) {&#xD;
        case 'b':&#xD;
            replaceString = &quot;notebook_id&quot;;&#xD;
            break;&#xD;
        case 'n':&#xD;
            replaceString = &quot;note_id&quot;;&#xD;
            break;&#xD;
        default:&#xD;
            throw new RuntimeException(&quot;Invalid Shareable&quot;);&#xD;
    }&#xD;
    sql = sql.replaceAll(&quot;:targetTable&quot;, replaceString);&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareStatement(sql);&#xD;
        ps.setInt(1, s.getId());&#xD;
        ResultSet rs = ps.executeQuery();&#xD;
        return makeFromResultSet(rs);&#xD;
    } catch (Exception e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
    return v;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P8XnQOCHEeakJtU5f6kHGA" name="makeFromResultSet" specification="_P8SuwOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Vector&lt;Permission> v = new Vector&lt;>();&#xD;
    while (rs.next()) {&#xD;
        Level l;&#xD;
        switch(rs.getInt(&quot;permission_level&quot;)) {&#xD;
            case 10:&#xD;
                l = Level.READ;&#xD;
                break;&#xD;
            case 20:&#xD;
                l = Level.EDIT;&#xD;
                break;&#xD;
            case 30:&#xD;
                l = Level.DELETE;&#xD;
                break;&#xD;
            default:&#xD;
                l = Level.NONE;&#xD;
        }&#xD;
        Permission p = new Permission(rs.getInt(&quot;id&quot;), l);&#xD;
        UserInfoMapper uim = UserInfoMapper.getUserInfoMapper();&#xD;
        NoteMapper nm = NoteMapper.getNoteMapper();&#xD;
        NoteBookMapper nbm = NoteBookMapper.getNoteBookMapper();&#xD;
        p.setBeneficiary(uim.findById(rs.getInt(&quot;beneficiary_id&quot;)));&#xD;
        p.setAuthor(uim.findById(rs.getInt(&quot;author_id&quot;)));&#xD;
        Shareable sharedObject;&#xD;
        char type = rs.getString(&quot;type&quot;).charAt(0);&#xD;
        int id;&#xD;
        switch(type) {&#xD;
            case 'b':&#xD;
                id = rs.getInt(&quot;notebook_id&quot;);&#xD;
                sharedObject = nbm.findById(id);&#xD;
                break;&#xD;
            case 'n':&#xD;
                id = rs.getInt(&quot;note_id&quot;);&#xD;
                sharedObject = nm.findById(id);&#xD;
                break;&#xD;
            default:&#xD;
                throw new RuntimeException();&#xD;
        }&#xD;
        p.setSharedObject(sharedObject);&#xD;
        v.add(p);&#xD;
    }&#xD;
    return v;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P8eU8OCHEeakJtU5f6kHGA" name="getAllPermissionsCreatedBy" specification="_P8bRoOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareStatement(&quot;SELECT * FROM notizbuch.permission &quot; + &quot;WHERE author_id = ?&quot;);&#xD;
        ps.setInt(1, u.getId());&#xD;
        return makeFromResultSet(ps.executeQuery());&#xD;
    } catch (SQLExceptionClassNotFoundException |  e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
    return null;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P8j0gOCHEeakJtU5f6kHGA" name="getAllPermissionsFor" specification="_P8gxMOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareStatement(&quot;SELECT * FROM notizbuch.permission &quot; + &quot;WHERE beneficiary_id = ?&quot;);&#xD;
        ps.setInt(1, u.getId());&#xD;
        return makeFromResultSet(ps.executeQuery());&#xD;
    } catch (SQLExceptionClassNotFoundException |  e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
    return null;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P8oF8OCHEeakJtU5f6kHGA" name="savePermission" specification="_P8mQwOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareStatement(&quot;UPDATE notizbuch.permission SET permission_level = ? WHERE id = ?&quot;);&#xD;
        ps.setInt(1, p.getLevelAsInt());&#xD;
        ps.setInt(2, p.getId());&#xD;
        ps.executeUpdate();&#xD;
    } catch (Exception e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P8sXYOCHEeakJtU5f6kHGA" name="deletePermission" specification="_P8p7IOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    String sql = &quot;DELETE FROM notizbuch.permission WHERE id = ?&quot;;&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareStatement(sql);&#xD;
        ps.setInt(1, p.getId());&#xD;
        ps.executeUpdate();&#xD;
    } catch (SQLException e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P8wBwOCHEeakJtU5f6kHGA" name="getAllPermissions" specification="_P8uMkOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Statement s;&#xD;
    try {&#xD;
        s = connection.createStatement();&#xD;
        ResultSet rs = s.executeQuery(&quot;SELECT * FROM notizbuch.permission&quot;);&#xD;
        return makeFromResultSet(rs);&#xD;
    } catch (SQLExceptionClassNotFoundException |  e) {&#xD;
        e.printStackTrace();&#xD;
        return null;&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P7h5wOCHEeakJtU5f6kHGA" name="PermissionMapper" visibility="protected" method="_P7oncOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA"/>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P7p1kOCHEeakJtU5f6kHGA" name="getPermissionMapper" visibility="public" isStatic="true" method="_P7sR0OCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P7rDsOCHEeakJtU5f6kHGA" type="_P7bMEOCHEeakJtU5f6kHGA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P7xxYOCHEeakJtU5f6kHGA" name="getPermissionFor" visibility="public" method="_P7-lsOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P73Q8OCHEeakJtU5f6kHGA" type="_P7zmkOCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P77iYOCHEeakJtU5f6kHGA" name="u" type="_P5CmceCHEeakJtU5f6kHGA"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P79XkOCHEeakJtU5f6kHGA" name="sharedObject" type="_P7tf8OCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P8Aa4OCHEeakJtU5f6kHGA" name="createPermission" visibility="public" method="_P8C3IOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P8BpAOCHEeakJtU5f6kHGA" name="p" type="_P7zmkOCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P8HvoOCHEeakJtU5f6kHGA" name="getAllPermissionsFor" visibility="public" method="_P8LaAOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P8I9wOCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P8KL4OCHEeakJtU5f6kHGA" name="s" type="_P7tf8OCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P8SuwOCHEeakJtU5f6kHGA" name="makeFromResultSet" visibility="public" method="_P8XnQOCHEeakJtU5f6kHGA" raisedException="_P5mnIOCHEeakJtU5f6kHGA _P4LDwOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P8T84OCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P8VLAOCHEeakJtU5f6kHGA" name="rs" type="_P8NPMOCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P8bRoOCHEeakJtU5f6kHGA" name="getAllPermissionsCreatedBy" visibility="public" method="_P8eU8OCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P8cfwOCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P8dt4OCHEeakJtU5f6kHGA" name="u" type="_P5CmceCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P8gxMOCHEeakJtU5f6kHGA" name="getAllPermissionsFor" visibility="public" method="_P8j0gOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P8hYQOCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P8jNcOCHEeakJtU5f6kHGA" name="u" type="_P5CmceCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P8mQwOCHEeakJtU5f6kHGA" name="savePermission" visibility="public" method="_P8oF8OCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P8ne4OCHEeakJtU5f6kHGA" name="p" type="_P7zmkOCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P8p7IOCHEeakJtU5f6kHGA" name="deletePermission" visibility="public" method="_P8sXYOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P8rJQOCHEeakJtU5f6kHGA" name="p" type="_P7zmkOCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P8uMkOCHEeakJtU5f6kHGA" name="getAllPermissions" visibility="public" method="_P8wBwOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P8uzoOCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_P8NPMOCHEeakJtU5f6kHGA" name="ResultSet"/>
                  <packagedElement xmi:type="uml:Class" xmi:id="_P8zsIOCHEeakJtU5f6kHGA" name="GoogleCredentials" visibility="public">
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P81hUOCHEeakJtU5f6kHGA" name="GOOGLE_URL" visibility="public" isLeaf="true" isStatic="true" type="_P6pI8OCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_P839kOCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>&quot;&quot;</body>
                      </defaultValue>
                    </ownedAttribute>
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P85ywOCHEeakJtU5f6kHGA" name="GOOGLE_USER" visibility="public" isLeaf="true" isStatic="true" type="_P6pI8OCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_P87n8OCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>&quot;&quot;</body>
                      </defaultValue>
                    </ownedAttribute>
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P89dIOCHEeakJtU5f6kHGA" name="GOOGLE_PASS" visibility="public" isLeaf="true" isStatic="true" type="_P6pI8OCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_P8_SUOCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>&quot;&quot;</body>
                      </defaultValue>
                    </ownedAttribute>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_P9Ex4OCHEeakJtU5f6kHGA" name="DBConnection" visibility="public">
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P9GAAOCHEeakJtU5f6kHGA" name="JDBC_DRIVER" visibility="private" isLeaf="true" isStatic="true" type="_P6pI8OCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_P9HOIOCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>&quot;com.mysql.jdbc.Driver&quot;</body>
                      </defaultValue>
                    </ownedAttribute>
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P9IcQOCHEeakJtU5f6kHGA" name="DB_URL" visibility="private" isLeaf="true" isStatic="true" type="_P6pI8OCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_P9KRcOCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>&quot;jdbc:mysql://localhost/notizbuch&quot;</body>
                      </defaultValue>
                    </ownedAttribute>
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P9MGoOCHEeakJtU5f6kHGA" name="USER" visibility="private" isLeaf="true" isStatic="true" type="_P6pI8OCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_P9N70OCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>&quot;root&quot;</body>
                      </defaultValue>
                    </ownedAttribute>
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P9PJ8OCHEeakJtU5f6kHGA" name="PASS" visibility="private" isLeaf="true" isStatic="true" type="_P6pI8OCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_P9RmMOCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>&quot;&quot;</body>
                      </defaultValue>
                    </ownedAttribute>
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P9WesOCHEeakJtU5f6kHGA" name="singleton" visibility="private" isStatic="true" type="_P9S0UOCHEeakJtU5f6kHGA" isUnique="false"/>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P9clUOCHEeakJtU5f6kHGA" name="DBConnection" specification="_P9YT4OCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P9ir8OCHEeakJtU5f6kHGA" name="getConnection" specification="_P9eagOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    if (singleton == null) {&#xD;
        String url, user, pass;&#xD;
        if (SystemProperty.environment.value() == SystemProperty.Environment.Value.Production) {&#xD;
            url = &quot;jdbc:google:mysql://it-projekt-hdm:it-projekt-huber-sql/notizbuch&quot;;&#xD;
            user = &quot;root&quot;;&#xD;
            pass = &quot;nm9000!&quot;;&#xD;
            Class.forName(&quot;com.mysql.jdbc.GoogleDriver&quot;);&#xD;
        } else {&#xD;
            url = DB_URL;&#xD;
            user = USER;&#xD;
            pass = PASS;&#xD;
        }&#xD;
        singleton = DriverManager.getConnection(url, user, pass);&#xD;
    }&#xD;
    return singleton;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P9qAsOCHEeakJtU5f6kHGA" name="finalize" specification="_P9khIOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    singleton.close();&#xD;
    super.finalize();&#xD;
</body>
                    </ownedBehavior>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P9YT4OCHEeakJtU5f6kHGA" name="DBConnection" visibility="protected" method="_P9clUOCHEeakJtU5f6kHGA"/>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P9eagOCHEeakJtU5f6kHGA" name="getConnection" visibility="public" isStatic="true" method="_P9ir8OCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P4SYgOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P9gPsOCHEeakJtU5f6kHGA" type="_P9S0UOCHEeakJtU5f6kHGA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P9khIOCHEeakJtU5f6kHGA" name="finalize" visibility="protected" method="_P9qAsOCHEeakJtU5f6kHGA" raisedException="_P9lIMOCHEeakJtU5f6kHGA"/>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_P-cD0OCHEeakJtU5f6kHGA" name="NoteMapper" visibility="public">
                    <generalization xmi:type="uml:Generalization" xmi:id="_P-dR8OCHEeakJtU5f6kHGA" general="_P3z3YOCHEeakJtU5f6kHGA"/>
                    <generalization xmi:type="uml:Generalization" xmi:id="_ya3bwOCHEeakJtU5f6kHGA" general="_P3z3YOCHEeakJtU5f6kHGA"/>
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P-egEOCHEeakJtU5f6kHGA" name="noteMapper" visibility="private" isStatic="true" type="_P-cD0OCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_P-g8UOCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>null</body>
                      </defaultValue>
                    </ownedAttribute>
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P-iKcOCHEeakJtU5f6kHGA" name="noteUserMapper" visibility="private" type="_P5fSYOCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_P-j_oOCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>UserInfoMapper.getUserInfoMapper()</body>
                      </defaultValue>
                    </ownedAttribute>
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_P-l00OCHEeakJtU5f6kHGA" name="noteBookMapper" visibility="private" type="_P3zQUOCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_P-nqAOCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>NoteBookMapper.getNoteBookMapper()</body>
                      </defaultValue>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P-tJkOCHEeakJtU5f6kHGA" name="NoteMapper" specification="_P-o4IOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P-wz8OCHEeakJtU5f6kHGA" name="getNoteMapper" specification="_P-u-wOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    if (noteMapper == null) {&#xD;
        try {&#xD;
            noteMapper = new NoteMapper();&#xD;
        } catch (ClassNotFoundException e) {&#xD;
            e.printStackTrace();&#xD;
        } catch (SQLException e) {&#xD;
            e.printStackTrace();&#xD;
        }&#xD;
    }&#xD;
    return noteMapper;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P-8aIOCHEeakJtU5f6kHGA" name="create" specification="_P-26kOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement stmt = connection.prepareStatement(&quot;INSERT INTO notizbuch.note&quot; + &quot;(title, subtitle, content, note_source, creation_date, due_date, modification_date, notebook_id, author_id) VALUES (?,?,?,?,?,?,?,?,?)&quot;, Statement.RETURN_GENERATED_KEYS);&#xD;
        stmt.setString(1, note.getTitle());&#xD;
        stmt.setString(2, note.getSubtitle());&#xD;
        stmt.setString(3, note.getContent());&#xD;
        if (!(note.getSource() == null)) {&#xD;
            stmt.setString(4, note.getSource());&#xD;
        } else {&#xD;
            stmt.setString(4, null);&#xD;
        }&#xD;
        stmt.setDate(5, note.getCreationDate());&#xD;
        stmt.setDate(6, note.getDueDate());&#xD;
        stmt.setDate(7, note.getModificationDate());&#xD;
        if (!(note.getNoteBook() == null)) {&#xD;
            int noteBookId = note.getNoteBook().getId();&#xD;
            stmt.setInt(8, noteBookId);&#xD;
        } else {&#xD;
            stmt.setNull(8, 0);&#xD;
        }&#xD;
        stmt.setInt(9, note.getOwner().getId());&#xD;
        stmt.executeUpdate();&#xD;
        ResultSet rs = stmt.getGeneratedKeys();&#xD;
        if (rs.next()) {&#xD;
            return findById(rs.getInt(1));&#xD;
        }&#xD;
    } catch (SQLException sqlExp) {&#xD;
        sqlExp.printStackTrace();&#xD;
    }&#xD;
    return note;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P_B5sOCHEeakJtU5f6kHGA" name="findById" specification="_P--PUOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    if (isObjectLoaded(id, Note.class)) {&#xD;
        return (Note) loadedObjects.get(id);&#xD;
    }&#xD;
    try {&#xD;
        PreparedStatement stmt = connection.prepareStatement(&quot;SELECT * FROM notizbuch.note WHERE id = ?&quot;);&#xD;
        stmt.setInt(1, id);&#xD;
        ResultSet rs = stmt.executeQuery();&#xD;
        if (rs.next()) {&#xD;
            Note note = new Note(rs.getInt(&quot;id&quot;), rs.getString(&quot;content&quot;), rs.getString(&quot;title&quot;), rs.getString(&quot;subtitle&quot;), UserInfoMapper.getUserInfoMapper().findById(rs.getInt(&quot;author_id&quot;)), NoteBookMapper.getNoteBookMapper().findById(rs.getInt(&quot;notebook_id&quot;)), rs.getDate(&quot;creation_date&quot;), rs.getDate(&quot;due_date&quot;), rs.getDate(&quot;modification_date&quot;));&#xD;
            loadedObjects.put(rs.getInt(&quot;id&quot;), note);&#xD;
            return note;&#xD;
        }&#xD;
    } catch (SQLException sqlExp) {&#xD;
        sqlExp.printStackTrace();&#xD;
        return null;&#xD;
    }&#xD;
    return null;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P_IAUOCHEeakJtU5f6kHGA" name="save" specification="_P_Du4OCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement stmt = connection.prepareStatement(&quot;UPDATE notizbuch.note SET title=?, subtitle=?, content=?, note_source=?, creation_date=?, due_date=?, modification_date=?, notebook_id=?, author_id=? WHERE id = ?&quot;);&#xD;
        // Alle String-Inhalte&#xD;
        stmt.setString(1, note.getTitle());&#xD;
        stmt.setString(2, note.getSubtitle());&#xD;
        stmt.setString(3, note.getContent());&#xD;
        stmt.setString(4, &quot;Platzhalter Source&quot;);&#xD;
        // Daten&#xD;
        stmt.setDate(5, note.getCreationDate());&#xD;
        stmt.setDate(6, note.getDueDate());&#xD;
        stmt.setDate(7, new Date(System.currentTimeMillis()));&#xD;
        // IDs, gesonderte Nullbehandlung&#xD;
        if (note.getNoteBook() == null) {&#xD;
            stmt.setObject(8, null);&#xD;
        } else {&#xD;
            stmt.setInt(8, note.getNoteBook().getId());&#xD;
        }&#xD;
        stmt.setInt(9, note.getOwner().getId());&#xD;
        // Id der zu speichernden Notiz&#xD;
        stmt.setInt(10, note.getId());&#xD;
        stmt.executeUpdate();&#xD;
    } catch (SQLException sqlExp) {&#xD;
        sqlExp.printStackTrace();&#xD;
        throw new IllegalArgumentException();&#xD;
    }&#xD;
    return findById(note.getId());&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P_LqsOCHEeakJtU5f6kHGA" name="delete" specification="_P_J1gOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement stmt = connection.prepareStatement(&quot;DELETE FROM notizbuch.note WHERE id = ?&quot;);&#xD;
        stmt.setInt(1, note.getId());&#xD;
        stmt.executeUpdate();&#xD;
    } catch (SQLException e) {&#xD;
        e.printStackTrace();&#xD;
        throw new IllegalArgumentException();&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P_QjMOCHEeakJtU5f6kHGA" name="getAllNotes" specification="_P_Nf4OCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        Statement stmt = connection.createStatement();&#xD;
        ResultSet rs = stmt.executeQuery(&quot;SELECT * FROM notizbuch.note&quot;);&#xD;
        return makeNotesFromResultSet(rs);&#xD;
    } catch (SQLException e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
    return new Vector&lt;Note>();&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P_mhcOCHEeakJtU5f6kHGA" name="getAllNotesForUserId" specification="_P_SYYOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement stmt = connection.prepareStatement(&quot;SELECT * FROM notizbuch.note WHERE author_id = ?&quot;);&#xD;
        stmt.setInt(1, userId);&#xD;
        ResultSet rs = stmt.executeQuery();&#xD;
        return makeNotesFromResultSet(rs);&#xD;
    } catch (SQLExceptionClassNotFoundException |  e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
    return new Vector&lt;Note>();&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P_sBAOCHEeakJtU5f6kHGA" name="getAllNotesForUser" specification="_P_pkwOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement stmt = connection.prepareStatement(&quot;SELECT * FROM notizbuch.note WHERE author_id = ? AND due_date >=NOW() ORDER BY due_date LIMIT 5&quot;);&#xD;
        stmt.setInt(1, userId);&#xD;
        ResultSet rs = stmt.executeQuery();&#xD;
        return makeNotesFromResultSet(rs);&#xD;
    } catch (SQLExceptionClassNotFoundException |  e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
    return new Vector&lt;Note>();&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P_wScOCHEeakJtU5f6kHGA" name="getAllNotesForNoteBookId" specification="_P_tPIOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareStatement(&quot;SELECT * FROM notizbuch.note WHERE notebook_id = ?&quot;);&#xD;
        ps.setInt(1, id);&#xD;
        ResultSet rs = ps.executeQuery();&#xD;
        return makeNotesFromResultSet(rs);&#xD;
    } catch (SQLExceptionClassNotFoundException |  e) {&#xD;
        e.printStackTrace();&#xD;
    }&#xD;
    return new Vector&lt;>();&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_P_3AIOCHEeakJtU5f6kHGA" name="getAllNotesSharedWith" specification="_P_zVwOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    try {&#xD;
        String sql = &quot;SELECT note.id AS id, title, subtitle, content, note_source, creation_date, due_date, modification_date, note.notebook_id AS notebook_id, note.author_id AS author_id FROM note &quot; + &quot;JOIN permission ON note.id = permission.note_id WHERE beneficiary_id = ?&quot;;&#xD;
        PreparedStatement ps = connection.prepareStatement(sql);&#xD;
        ps.setInt(1, u.getId());&#xD;
        ResultSet rs = ps.executeQuery();&#xD;
        return makeNotesFromResultSet(rs);&#xD;
    } catch (Exception e) {&#xD;
        e.printStackTrace();&#xD;
        return new Vector&lt;>();&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QAB_QOCHEeakJtU5f6kHGA" name="makeNotesFromResultSet" specification="_P_74oOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Vector&lt;Note> v = new Vector&lt;>();&#xD;
    while (rs.next()) {&#xD;
        Note note = new Note(rs.getInt(&quot;id&quot;));&#xD;
        note.setContent(rs.getString(&quot;content&quot;));&#xD;
        note.setTitle(rs.getString(&quot;title&quot;));&#xD;
        note.setSubtitle(rs.getString(&quot;subtitle&quot;));&#xD;
        note.setOwner(noteUserMapper.findById(rs.getInt(&quot;author_id&quot;)));&#xD;
        note.setNoteBook(noteBookMapper.findById(rs.getInt(&quot;notebook_id&quot;)));&#xD;
        note.setCreationDate(rs.getDate(&quot;creation_date&quot;));&#xD;
        note.setDueDate(rs.getDate(&quot;due_date&quot;));&#xD;
        note.setModificationDate(rs.getDate(&quot;modification_date&quot;));&#xD;
        v.add(note);&#xD;
    }&#xD;
    return v;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QAGQsOCHEeakJtU5f6kHGA" name="getAllNotesSharedBy" specification="_QAD0cOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    String sql = &quot;SELECT DISTINCT note.id AS id FROM note JOIN permission ON note.id = permission.note_id WHERE note.author_id = ?&quot;;&#xD;
    Vector&lt;Note> v = new Vector&lt;>();&#xD;
    try {&#xD;
        PreparedStatement ps = connection.prepareStatement(sql);&#xD;
        ps.setInt(1, u.getId());&#xD;
        ResultSet rs = ps.executeQuery();&#xD;
        while (rs.next()) {&#xD;
            v.add(findById(rs.getInt(&quot;id&quot;)));&#xD;
        }&#xD;
        return v;&#xD;
    } catch (Exception e) {&#xD;
        e.printStackTrace();&#xD;
        return v;&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P-o4IOCHEeakJtU5f6kHGA" name="NoteMapper" visibility="protected" method="_P-tJkOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA"/>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P-u-wOCHEeakJtU5f6kHGA" name="getNoteMapper" visibility="public" isStatic="true" method="_P-wz8OCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P-wM4OCHEeakJtU5f6kHGA" type="_P-cD0OCHEeakJtU5f6kHGA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P-26kOCHEeakJtU5f6kHGA" name="create" visibility="public" method="_P-8aIOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P-3hoOCHEeakJtU5f6kHGA" type="_P-ypIOCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P-594OCHEeakJtU5f6kHGA" name="note" type="_P-ypIOCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P--PUOCHEeakJtU5f6kHGA" name="findById" visibility="public" method="_P_B5sOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P--2YOCHEeakJtU5f6kHGA" type="_P-ypIOCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P_AEgOCHEeakJtU5f6kHGA" name="id">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P_Du4OCHEeakJtU5f6kHGA" name="save" visibility="public" method="_P_IAUOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P_E9AOCHEeakJtU5f6kHGA" type="_P-ypIOCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P_GLIOCHEeakJtU5f6kHGA" name="note" type="_P-ypIOCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P_J1gOCHEeakJtU5f6kHGA" name="delete" visibility="public" method="_P_LqsOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P_LDoOCHEeakJtU5f6kHGA" name="note" type="_P-ypIOCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P_Nf4OCHEeakJtU5f6kHGA" name="getAllNotes" visibility="public" method="_P_QjMOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P_OuAOCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P_SYYOCHEeakJtU5f6kHGA" name="getAllNotesForUserId" visibility="public" method="_P_mhcOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P_TmgOCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P_l6YOCHEeakJtU5f6kHGA" name="userId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P_pkwOCHEeakJtU5f6kHGA" name="getAllNotesForUser" visibility="public" method="_P_sBAOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P_qy4OCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P_rZ8OCHEeakJtU5f6kHGA" name="userId">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P_tPIOCHEeakJtU5f6kHGA" name="getAllNotesForNoteBookId" visibility="public" method="_P_wScOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P_udQOCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P_vrYOCHEeakJtU5f6kHGA" name="id">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P_zVwOCHEeakJtU5f6kHGA" name="getAllNotesSharedWith" visibility="public" method="_P_3AIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P_1K8OCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P_2ZEOCHEeakJtU5f6kHGA" name="u" type="_P5CmceCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_P_74oOCHEeakJtU5f6kHGA" name="makeNotesFromResultSet" visibility="private" method="_QAB_QOCHEeakJtU5f6kHGA" raisedException="_P5mnIOCHEeakJtU5f6kHGA _P4LDwOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_P_-U4OCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_QAAxIOCHEeakJtU5f6kHGA" name="rs" type="_P8NPMOCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_QAD0cOCHEeakJtU5f6kHGA" name="getAllNotesSharedBy" visibility="public" method="_QAGQsOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_QAFCkOCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_QAFpoOCHEeakJtU5f6kHGA" name="u" type="_P5CmceCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                  </packagedElement>
                  <packagedElement xmi:type="uml:Class" xmi:id="_QALwQOCHEeakJtU5f6kHGA" name="SourceMapper" visibility="public">
                    <generalization xmi:type="uml:Generalization" xmi:id="_QAM-YOCHEeakJtU5f6kHGA" general="_P3z3YOCHEeakJtU5f6kHGA"/>
                    <generalization xmi:type="uml:Generalization" xmi:id="_0dUbsOCHEeakJtU5f6kHGA" general="_P3z3YOCHEeakJtU5f6kHGA"/>
                    <ownedAttribute xmi:type="uml:Property" xmi:id="_QAOMgOCHEeakJtU5f6kHGA" name="sourceMapper" visibility="private" isStatic="true" type="_QALwQOCHEeakJtU5f6kHGA" isUnique="false">
                      <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_QAQowOCHEeakJtU5f6kHGA" name="defaultValue">
                        <language>JAVA</language>
                        <body>null</body>
                      </defaultValue>
                    </ownedAttribute>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QAVhQOCHEeakJtU5f6kHGA" name="SourceMapper" specification="_QARP0OCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    super();&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QAZysOCHEeakJtU5f6kHGA" name="getSourceMapper" specification="_QAWvYOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    if (sourceMapper == null) {&#xD;
        sourceMapper = new SourceMapper();&#xD;
    }&#xD;
    return sourceMapper;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QAi8oOCHEeakJtU5f6kHGA" name="create" specification="_QAerMOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Connection con = DBConnection.getConnection();&#xD;
    try {&#xD;
        PreparedStatement stmt = con.prepareStatement(&quot;INSERT INTO source(Url)&quot; + &quot;VALUES (?)&quot;, Statement.RETURN_GENERATED_KEYS);&#xD;
        stmt.setString(1, source.getURL().toString());&#xD;
        stmt.executeUpdate();&#xD;
        ResultSet rs = stmt.getGeneratedKeys();&#xD;
        if (rs.next()) {&#xD;
            return findById(rs.getInt(1));&#xD;
        // else {&#xD;
        }&#xD;
    // throw new SQLException(&quot;Sorry&quot;);&#xD;
    // }&#xD;
    } catch (SQLException sqlExp) {&#xD;
        sqlExp.printStackTrace();&#xD;
    }&#xD;
    return source;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QApDQOCHEeakJtU5f6kHGA" name="findById" specification="_QAkKwOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Connection con = DBConnection.getConnection();&#xD;
    try {&#xD;
        PreparedStatement stmt = con.prepareStatement(&quot;SELECT Source FROM Notebook.Note WHERE Id = ?&quot;);&#xD;
        stmt.setLong(1, id);&#xD;
        // Ergebnis holen&#xD;
        ResultSet results = stmt.executeQuery();&#xD;
        if (results.next()) {&#xD;
            // new Source(results.getURL(&quot;URL&quot;));&#xD;
            return null;&#xD;
        }&#xD;
    } catch (SQLException sqlExp) {&#xD;
        sqlExp.printStackTrace();&#xD;
        return null;&#xD;
    }&#xD;
    return null;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QAvJ4OCHEeakJtU5f6kHGA" name="save" specification="_QAqRYOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Connection con = DBConnection.getConnection();&#xD;
    try {&#xD;
        PreparedStatement stmt = con.prepareStatement(&quot;UPDATE Source SET url=? WHERE urlId=?&quot;);&#xD;
        stmt.setString(1, source.getURL().toString());&#xD;
        stmt.executeUpdate();&#xD;
    } catch (SQLException sqlExp) {&#xD;
        sqlExp.printStackTrace();&#xD;
    }&#xD;
    // aktualisierte Berechtigung zur?ckgeben&#xD;
    return source;&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QA1QgOCHEeakJtU5f6kHGA" name="delete" specification="_QAwYAOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Connection con = DBConnection.getConnection();&#xD;
    try {&#xD;
        PreparedStatement stmt = con.prepareStatement(&quot;DELETE FROM Source WHERE Id=?&quot;);&#xD;
        stmt.setLong(1, source.getSourceId());&#xD;
        stmt.executeUpdate();&#xD;
    } catch (SQLException sqlExp) {&#xD;
        sqlExp.printStackTrace();&#xD;
    }&#xD;
</body>
                    </ownedBehavior>
                    <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QA7-MOCHEeakJtU5f6kHGA" name="getAllSource" specification="_QA2eoOCHEeakJtU5f6kHGA">
                      <language>JAVA</language>
                      <body>&#xD;
    Vector&lt;Source> result = new Vector&lt;Source>();&#xD;
    Connection con = DBConnection.getConnection();&#xD;
    PreparedStatement stmt = con.prepareStatement(&quot;SELECT Id FROM Source&quot;);&#xD;
    ResultSet rs = stmt.executeQuery();&#xD;
    while (rs.next()) {&#xD;
        result.add(this.findById(rs.getLong(&quot;Id&quot;)));&#xD;
    }&#xD;
    return result;&#xD;
</body>
                    </ownedBehavior>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_QARP0OCHEeakJtU5f6kHGA" name="SourceMapper" visibility="protected" method="_QAVhQOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA"/>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_QAWvYOCHEeakJtU5f6kHGA" name="getSourceMapper" visibility="public" isStatic="true" method="_QAZysOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_QAX9gOCHEeakJtU5f6kHGA" type="_QALwQOCHEeakJtU5f6kHGA" direction="return"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_QAerMOCHEeakJtU5f6kHGA" name="create" visibility="public" method="_QAi8oOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_QAf5UOCHEeakJtU5f6kHGA" type="_QAbn4OCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_QAhHcOCHEeakJtU5f6kHGA" name="source" type="_QAbn4OCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_QAkKwOCHEeakJtU5f6kHGA" name="findById" visibility="public" method="_QApDQOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_QAlY4OCHEeakJtU5f6kHGA" type="_QAbn4OCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_QAmnAOCHEeakJtU5f6kHGA" name="id">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_8heigBydEduyofBvg4RL2w"/>
                      </ownedParameter>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_QAqRYOCHEeakJtU5f6kHGA" name="save" visibility="public" method="_QAvJ4OCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_QAq4cOCHEeakJtU5f6kHGA" type="_QAbn4OCHEeakJtU5f6kHGA" direction="return"/>
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_QAsGkOCHEeakJtU5f6kHGA" name="source" type="_QAbn4OCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_QAwYAOCHEeakJtU5f6kHGA" name="delete" visibility="public" method="_QA1QgOCHEeakJtU5f6kHGA" raisedException="_P4LDwOCHEeakJtU5f6kHGA _P5mnIOCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_QAyNMOCHEeakJtU5f6kHGA" name="source" type="_QAbn4OCHEeakJtU5f6kHGA"/>
                    </ownedOperation>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_QA2eoOCHEeakJtU5f6kHGA" name="getAllSource" visibility="public" method="_QA7-MOCHEeakJtU5f6kHGA" raisedException="_QA4T0OCHEeakJtU5f6kHGA">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_QA3swOCHEeakJtU5f6kHGA" type="_P49G4eCHEeakJtU5f6kHGA" direction="return"/>
                    </ownedOperation>
                  </packagedElement>
                </packagedElement>
              </packagedElement>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_P4RKYOCHEeakJtU5f6kHGA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_P4RxcOCHEeakJtU5f6kHGA" name="java">
        <packagedElement xmi:type="uml:Package" xmi:id="_P4RxceCHEeakJtU5f6kHGA" name="sql">
          <packagedElement xmi:type="uml:Class" xmi:id="_P4SYgOCHEeakJtU5f6kHGA" name="SQLException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_P5He8eCHEeakJtU5f6kHGA" name="ResultSet"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_P9S0UOCHEeakJtU5f6kHGA" name="Connection"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_P49G4OCHEeakJtU5f6kHGA" name="util">
          <packagedElement xmi:type="uml:Class" xmi:id="_P49G4eCHEeakJtU5f6kHGA" name="Vector"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_P9wHUOCHEeakJtU5f6kHGA" name="Map"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_P6oh4OCHEeakJtU5f6kHGA" name="lang">
          <packagedElement xmi:type="uml:Class" xmi:id="_P6pI8OCHEeakJtU5f6kHGA" name="String"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_P9lIMOCHEeakJtU5f6kHGA" name="Throwable"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_P98UkOCHEeakJtU5f6kHGA" name="Class"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_QA4T0OCHEeakJtU5f6kHGA" name="Exception"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_P4bicOCHEeakJtU5f6kHGA" name="importedTypes">
      <packagedElement xmi:type="uml:Package" xmi:id="_P4biceCHEeakJtU5f6kHGA" name="de">
        <packagedElement xmi:type="uml:Package" xmi:id="_P4cJgOCHEeakJtU5f6kHGA" name="hdm_stuttgart">
          <packagedElement xmi:type="uml:Package" xmi:id="_P4cJgeCHEeakJtU5f6kHGA" name="huber">
            <packagedElement xmi:type="uml:Package" xmi:id="_P4cJguCHEeakJtU5f6kHGA" name="itprojekt">
              <packagedElement xmi:type="uml:Package" xmi:id="_P4cwkOCHEeakJtU5f6kHGA" name="shared">
                <packagedElement xmi:type="uml:Package" xmi:id="_P4cwkeCHEeakJtU5f6kHGA" name="domainobjects">
                  <packagedElement xmi:type="uml:Class" xmi:id="_P4cwkuCHEeakJtU5f6kHGA" name="NoteBook"/>
                  <packagedElement xmi:type="uml:Class" xmi:id="_P5CmceCHEeakJtU5f6kHGA" name="UserInfo"/>
                  <packagedElement xmi:type="uml:Class" xmi:id="_P7tf8OCHEeakJtU5f6kHGA" name="Shareable"/>
                  <packagedElement xmi:type="uml:Class" xmi:id="_P7zmkOCHEeakJtU5f6kHGA" name="Permission"/>
                  <packagedElement xmi:type="uml:Class" xmi:id="_P-ypIOCHEeakJtU5f6kHGA" name="Note"/>
                  <packagedElement xmi:type="uml:Class" xmi:id="_QAbn4OCHEeakJtU5f6kHGA" name="Source"/>
                </packagedElement>
              </packagedElement>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_8WsoMOCGEeakJtU5f6kHGA">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_8WxgsOCGEeakJtU5f6kHGA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/PapyrusJava/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://PapyrusJava_PROFILES/PapyrusJava.profile.uml#_j9REUByGEduN1bTiWJ0lyw"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_8XOMoOCGEeakJtU5f6kHGA">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_8XPawOCGEeakJtU5f6kHGA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/Codegen/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://Codegen_PROFILES/Codegen.profile.uml#_fPDsIBa-EearhdjjJ6cVzQ"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_8Xq4kOCGEeakJtU5f6kHGA">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_8XstwOCGEeakJtU5f6kHGA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <standard:Create xmi:id="_P4J1oOCHEeakJtU5f6kHGA" base_BehavioralFeature="_P39BUOCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P4P8QOCHEeakJtU5f6kHGA" name="ClassNotFoundException" base_Classifier="_P4LDwOCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P4U0wOCHEeakJtU5f6kHGA" name="java.sql.SQLException" base_Classifier="_P4SYgOCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P4ga8OCHEeakJtU5f6kHGA" name="de.hdm_stuttgart.huber.itprojekt.shared.domainobjects.NoteBook" base_Classifier="_P4cwkuCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P5AKMOCHEeakJtU5f6kHGA" name="java.util.Vector" base_Classifier="_P49G4eCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P5FpwOCHEeakJtU5f6kHGA" name="de.hdm_stuttgart.huber.itprojekt.shared.domainobjects.UserInfo" base_Classifier="_P5CmceCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P5QB0OCHEeakJtU5f6kHGA" name="java.sql.ResultSet" base_Classifier="_P5He8eCHEeakJtU5f6kHGA"/>
  <standard:Create xmi:id="_P5lZAOCHEeakJtU5f6kHGA" base_BehavioralFeature="_P5gggeCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P5pDYOCHEeakJtU5f6kHGA" name="SQLException" base_Classifier="_P5mnIOCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P6taYOCHEeakJtU5f6kHGA" name="java.lang.String" base_Classifier="_P6pI8OCHEeakJtU5f6kHGA"/>
  <standard:Create xmi:id="_P7k9EOCHEeakJtU5f6kHGA" base_BehavioralFeature="_P7h5wOCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P7v8MOCHEeakJtU5f6kHGA" name="de.hdm_stuttgart.huber.itprojekt.shared.domainobjects.Shareable" base_Classifier="_P7tf8OCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P72C0OCHEeakJtU5f6kHGA" name="de.hdm_stuttgart.huber.itprojekt.shared.domainobjects.Permission" base_Classifier="_P7zmkOCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P8RgoOCHEeakJtU5f6kHGA" name="ResultSet" base_Classifier="_P8NPMOCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P9VQkOCHEeakJtU5f6kHGA" name="java.sql.Connection" base_Classifier="_P9S0UOCHEeakJtU5f6kHGA"/>
  <standard:Create xmi:id="_P9awIOCHEeakJtU5f6kHGA" base_BehavioralFeature="_P9YT4OCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P9nkcOCHEeakJtU5f6kHGA" name="java.lang.Throwable" base_Classifier="_P9lIMOCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P9x8gOCHEeakJtU5f6kHGA" name="java.util.Map" base_Classifier="_P9wHUOCHEeakJtU5f6kHGA"/>
  <standard:Create xmi:id="_P90_0OCHEeakJtU5f6kHGA" base_BehavioralFeature="_P9zKoeCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P9-JwOCHEeakJtU5f6kHGA" name="java.lang.Class" base_Classifier="_P98UkOCHEeakJtU5f6kHGA"/>
  <standard:Create xmi:id="_P-qtUOCHEeakJtU5f6kHGA" base_BehavioralFeature="_P-o4IOCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_P-1FYOCHEeakJtU5f6kHGA" name="de.hdm_stuttgart.huber.itprojekt.shared.domainobjects.Note" base_Classifier="_P-ypIOCHEeakJtU5f6kHGA"/>
  <standard:Create xmi:id="_QATFAOCHEeakJtU5f6kHGA" base_BehavioralFeature="_QARP0OCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_QAddEOCHEeakJtU5f6kHGA" name="de.hdm_stuttgart.huber.itprojekt.shared.domainobjects.Source" base_Classifier="_QAbn4OCHEeakJtU5f6kHGA"/>
  <PapyrusJava:External xmi:id="_QA6wEOCHEeakJtU5f6kHGA" name="java.lang.Exception" base_Classifier="_QA4T0OCHEeakJtU5f6kHGA"/>
</xmi:XMI>
